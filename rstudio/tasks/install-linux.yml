---

- name: Setting facts (yum, zypper)
  set_fact:
    rstudio_local_path: /tmp/rstudio-server.rpm
  when: ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "zypper"

- name: Setting facts (yum, zypper)
  set_fact:
    rshiny_local_path: /tmp/rshiny-server.rpm
  when: ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "zypper"

- name: Add epel repository
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
    gpgcheck: no
    enabled: yes

- name: yum install pre-req packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - wget
    - nss-pam-ldapd
    - openldap-clients
    - texlive
    - texinfo
    - lapack
    - lapack-devel
    - rrdtool
    - psmisc
    - R
    - texlive-epsf
    - texinfo-tex
    - curl-devel
    - nfs-utils
    - nfs4-acl-tools

- name: Download the rstudio-server package
  get_url: 
    url: "https://{{ rstudio_download_url }}/{{ rstudio_version_rpm }}"
    dest: "{{ rstudio_local_path }}"
    validate_certs: no
    timeout: 300
    force: yes

- name: Install RSTUDIO-SERVER application (yum)
  yum: 
    name: "{{ rstudio_local_path }}"
    state: present
  when: ansible_pkg_mgr == "yum"
  become: true

## installing R package
- name: Install R packages
  command: >
    Rscript --slave --no-save --no-restore-history -e "if (! ('{{ item }}' %in% installed.packages()[,'Package'])) { install.packages(pkgs='{{ item }}', repos=c('https://cran.rstudio.com/')); print('Added'); } else { print('Already installed'); }"
  register: r_result
  failed_when: "r_result.rc != 0 or 'had non-zero exit status' in r_result.stderr"
  changed_when:  "'Added' in r_result.stdout"
  #shell: R -e "install.packages('{{ item }}', repos='https://cran.rstudio.com/')"
  with_items:
    - shiny
    - rjson

## install shiny-server
- name: Download shiny-server package
  get_url:
    url: "https://{{ rshiny_download_url }}/{{ rshiny_version_rpm }}"
    dest: "{{ rshiny_local_path }}"
    validate_certs: no
    timeout: 300
    force: yes

- name: Install RSHINY-SERVER application (yum)
  yum:
    name: "{{ rshiny_local_path }}"
    state: present
  when: ansible_pkg_mgr == "yum"
  become: true

# password creation methon
# python -c 'import crypt; print(crypt.crypt("changeme", crypt.mksalt(crypt.METHOD_SHA512)))'
- name: Add the user 'rstudio' 
  user:
    name: rstudio
    comment: rstudio-server user
    password: $6$9wfBmMJG/QqV30Wn$EQT60f0FOsuqFRMHIOIxDSleJWQxsrJc49m0LV2FyvbXD30/dXClye8.gH1APCGvbFFEMWk6kaH9J.v1rdYKp0



- name: Start service rstudio-server, if not started
  service:
    name: rstudio-server
    state: started


- name: update rserver.conf
  copy:
    src: rserver.conf
    dest: /etc/rstudio/rserver.conf
  notify:
  - restart rstudio-server

- name: update rsession.conf
  copy:
    src: rsession.conf
    dest: /etc/rstudio/rsession.conf
  notify:
  - restart rstudio-server
